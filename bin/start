#!/usr/bin/env node

/**
 * Module dependencies.
 */
// 初始化redis集群
require('../middleware/redis').initRedisCluster();

var app = require('../app');
var debug = require('debug')('comeonbaby:server');
var http = require('http');
var os = require('os');
var setting = require('../config/setting');
// 初始化端口号
var port = normalizePort(setting.port || process.env.PORT || '3000');

// 获取CPU 的数量
//var numCPUs = os.cpus().length;
//var workers = {};

app.set('port', port);

// 创建服务器
var server = http.createServer(app);

// 监听
try {
    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
} catch (e) {
    console.log(e);
}

// 格式化端口数字
function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

// 异常
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
            ? 'Pipe ' + port
            : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

// 监听
function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
            ? 'pipe ' + addr
            : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
